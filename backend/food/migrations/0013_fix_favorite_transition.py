# Generated by Django 4.2 on 2025-07-05 09:11

from django.db import migrations


def fix_favorite_transition(apps, schema_editor):
    Favorite = apps.get_model('food', 'Favorite')
    from django.db.models import Count
    duplicates = Favorite.objects.values('user_id', 'favorite_id').annotate(
        count=Count('id')
    ).filter(count__gt=1)
    for dup in duplicates:
        Favorite.objects.filter(
            user_id=dup['user_id'],
            favorite_id=dup['favorite_id']
        ).order_by('id')[1:].delete()
    if hasattr(Favorite, 'favorite_id'):
        for fav in Favorite.objects.all():
            if not fav.recipe_id and fav.favorite_id:
                fav.recipe_id = fav.favorite_id
                fav.save()

class Migration(migrations.Migration):
    dependencies = [
        ('food', '0012_alter_favorite_recipe_alter_favorite_user_and_more'),
    ]

    operations = [
        migrations.RunPython(fix_favorite_transition),
    ]